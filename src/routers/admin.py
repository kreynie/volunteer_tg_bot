from aiogram import Router
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from aiogram.utils.markdown import hbold, hcode

from src.filters import TextFilter
from src.keyboards.reply import admin_keyboard, reset_state
from src.routers.utils import reset_user_state
from src.utils.states import ManageUsersState, GetForwardedUserIDState

router = Router(name=__name__)


@router.message(Command("admin"))
async def admin_panel(message: Message):
    await get_admin_keyboard(message)


@router.message(TextFilter("–≤–∑—è—Ç—å telegram id üÜî"))
async def set_forwarded_user_id_state(message: Message, state: FSMContext):
    await state.set_state(GetForwardedUserIDState.getting)
    await message.answer("–ü–µ—Ä–µ—à–ª–∏ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, ID –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å\n"
                         "–ù–∞–∂–º–∏ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ ID, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å", reply_markup=reset_state)


@router.message(GetForwardedUserIDState.getting, TextFilter("–≥–æ—Ç–æ–≤–æ ‚úÖ"))
async def get_forwarded_user_id(message: Message, state: FSMContext):
    await reset_user_state(message, state)
    await get_admin_keyboard(message)


@router.message(GetForwardedUserIDState.getting)
async def get_forwarded_user_id(message: Message):
    if message.forward_from is None:
        await message.answer("–ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        return

    await message.answer(f"User's ID: {hcode(message.forward_from.id)}")


@router.message(TextFilter("–¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚ûï"))
async def add_user(message: Message, state: FSMContext):
    await state.set_state(ManageUsersState.addition)
    await message.answer("–ü–µ—Ä–µ—á–∏—Å–ª—è–π –∞–π–¥–∏ –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏", reply_markup=reset_state)


@router.message(ManageUsersState.addition, TextFilter("–≥–æ—Ç–æ–≤–æ ‚úÖ"))
async def add_user_state(message: Message, state: FSMContext):
    await reset_user_state(message, state)
    await get_admin_keyboard(message)


@router.message(ManageUsersState.addition)
async def add_user_state(message: Message):
    if not message.text or not message.text.isdigit():
        await message.answer("–ú–Ω–µ –Ω—É–∂–µ–Ω –∞–π–¥–∏ —á–µ–ª–æ–≤–µ–∫–∞. –≠—Ç–æ —Ü–∏—Ñ–µ—Ä–∫–∏ —Ç–∞–∫–∏–µ")
        return

    await message.answer(f"–î–æ–±–∞–≤–ª–µ–Ω {hbold(message.text)}")


async def get_admin_keyboard(message: Message):
    await message.answer("–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", reply_markup=admin_keyboard)
